{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas\\\\Documents\\\\MyRepositories\\\\To-Do-List\\\\frontend\\\\src\\\\components\\\\api\\\\todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport axios from 'axios';\nimport { FiCheck, FiEdit, FiTrash2, FiX } from 'react-icons/fi';\nimport '../../styles/api.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToDoList = () => {\n  _s();\n  const location = useLocation();\n  const {\n    authToken,\n    name\n  } = location.state || {};\n\n  // Function to verify token and make refresh token\n  const verifyToken = async () => {\n    try {\n      const response = await axios.get('http://localhost:3333/auth/verify-token', {\n        withCredentials: true\n      });\n    } catch (error) {\n      window.location.href = \"/\";\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    verifyToken();\n  }, []);\n  //\n\n  //LIST SCHEMA\n\n  //List States\n\n  const [titleList, setTitleList] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n  const [lists, setLists] = useState([]);\n  const [logout, setLogout] = useState(false);\n  const [showLists, setShowLists] = useState(false);\n  const [inputOnOff, setInputOnOff] = useState(null);\n  const [warningError, setWarningError] = useState(null);\n  const [loadingList, setLoadingList] = useState(false);\n  //\n\n  // Function to find a specific list\n  const foundLists = useCallback(async () => {\n    setLoadingList(true);\n    try {\n      const response = await axios.get('http://localhost:3333/lists', {\n        headers: {\n          Authorization: `${authToken}`\n        }\n      });\n      setLists(response.data.Lista);\n    } catch (error) {\n      console.error('Error finding lists: ', error);\n    } finally {\n      setLoadingList(false);\n    }\n  }, [authToken]);\n  //\n\n  // Effect to find the lists when showLists == true\n  useEffect(() => {\n    try {\n      if (showLists) {\n        foundLists();\n      }\n    } catch (error) {\n      console.error('Error for show the lists: ', error);\n    }\n  }, [showLists, foundLists]);\n  //\n\n  // Function to logout user\n  const logoutUser = useCallback(async () => {\n    try {\n      const response = await axios.post('http://localhost:3333/logout', {}, {\n        withCredentials: true\n      });\n      if (response.data.logout) {\n        window.location.href = \"/\";\n      }\n    } catch (error) {\n      console.error('Error to make logout: ', error);\n    }\n  }, []);\n  //\n\n  // Effect to logout user when logout == true\n  useEffect(() => {\n    try {\n      if (logout) {\n        logoutUser();\n      }\n    } catch (error) {\n      console.error('Error in process of logout: ', error);\n    }\n  }, [logout, logoutUser]);\n  //\n\n  // Function to create a new list\n  const createList = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3333/createlist', {\n        titleList\n      }, {\n        headers: {\n          Authorization: `${authToken}`\n        }\n      });\n      setTitleList('');\n      setLists([...lists, response.data.Lista]);\n    } catch (err) {\n      console.error('Error for create the list: ', err);\n    }\n  };\n  //\n\n  // Function to open input of title list edit\n  const openInputTitleList = index => {\n    setInputOnOff(index);\n    setNewTitle(lists[index].title);\n    setWarningError(null);\n  };\n  //\n\n  // Function to editTitleList pressing the key enter\n  const anyChangeInput = e => {\n    setNewTitle(e.target.value);\n    if (e.target.value.trim()) {\n      setWarningError(null);\n    } else {\n      setWarningError('Empty field! Slave someting...'); // Set warningError when empty have 0 charecter\n    }\n  };\n  //\n\n  // Function to edit title list\n  const editTitleList = async index => {\n    try {\n      const response = await axios.put(`http://localhost:3333/lists/${lists[index].id}/update`, {\n        newTitle\n      }, {\n        headers: {\n          Authorization: `${authToken}`\n        }\n      });\n      const updatedLists = [...lists];\n      updatedLists[index] = {\n        ...updatedLists[index],\n        title: newTitle,\n        LastUpdate: response.data.LastUpdate\n      };\n      setLists(updatedLists);\n      setInputOnOff(null); //Close input of edit title\n    } catch (error) {\n      console.error('Error for edit the title list: ', error);\n    }\n  };\n  //\n\n  // Function to delete list\n  const deleteList = async index => {\n    try {\n      await axios.delete(`http://localhost:3333/lists/${lists[index].id}/delete`, {\n        headers: {\n          Authorization: `${authToken}`\n        }\n      });\n      const updatedLists = lists.filter((_, i) => i !== index); //Filter for update the specific list\n      setInputOnOff(null);\n      setLists(updatedLists);\n    } catch (error) {\n      console.error('Error for delete the list: ', error);\n    }\n  };\n  //\n  //\n\n  //MODAL TASKS SCHEMA\n  //Modal Task States\n\n  const [modalTitle, setModalTitle] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [showModalTask, setShowModalTask] = useState(false);\n  const [modalId, setModalId] = useState('');\n  const [descriptionTask, setDescriptionTask] = useState('');\n  const [descriptionCreateTask, setDescriptionCreateTask] = useState('');\n  const [inputTaskOnOff, setInputTaskOnOff] = useState(null);\n  const [warningErrorTask, setWarningErrorTask] = useState(null);\n  const [loadingTask, setLoadingTask] = useState(false);\n  //\n\n  // Function to open modal task\n  const openModalTask = (listId, listName) => {\n    console.log(listId);\n    foundTasks(listId); // Find the tasks from list\n    setModalTitle(listName);\n    setModalId(listId);\n    setShowModalTask(true);\n  };\n\n  // Function to close modal task\n  const closeModalTask = () => {\n    setShowModalTask(false);\n    setTasks([]); // Hide tasks for close the modal\n  };\n\n  //  Function to find tasks\n  const foundTasks = async listId => {\n    setLoadingTask(true);\n    try {\n      const response = await axios.get(`http://localhost:3333/lists/${listId}/tasks`, {\n        headers: {\n          Authorization: `${authToken}`\n        }\n      });\n      setTasks(response.data.tasks);\n      setLoadingTask(false);\n    } catch (error) {\n      console.error('Error for found the tasks: ', error);\n    }\n  };\n\n  //\n\n  // Function to add task in the list\n  const addTask = async listId => {\n    try {\n      const response = await axios.post(`http://localhost:3333/lists/${listId}/addtask`, {\n        descriptionCreateTask\n      }, {\n        headers: {\n          Authorization: `${authToken}`\n        }\n      });\n      setDescriptionCreateTask('');\n      setTasks([...tasks, response.data.Task]);\n    } catch (error) {\n      console.error('Error for add the task: ', error);\n    }\n  };\n\n  // Function to delete a task\n  const deleteTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:3333/tasks/${taskId}/delete`, {\n        headers: {\n          Authorization: `${authToken}`\n        }\n      });\n      setTasks(tasks.filter(task => task.id !== taskId)); // Remove a tarefa da lista localmente\n    } catch (error) {\n      console.error('Error for delete the task: ', error);\n    }\n  };\n\n  // Function for editTitleList pressing the key enter\n  const anyChangeInputTask = e => {\n    setDescriptionTask(e.target.value);\n    if (e.target.value.trim()) {\n      setWarningErrorTask(null);\n    } else {\n      setWarningErrorTask('Empty field! Slave someting...'); // Set warningError when empty have 0 charecter\n    }\n  };\n  //\n\n  // Function for open input of title list edit\n  const openInputEditTask = index => {\n    setInputTaskOnOff(index);\n    setDescriptionTask(tasks[index].description);\n    setWarningErrorTask(null);\n  };\n  //\n\n  // Function to edit a task\n  const editTask = async index => {\n    try {\n      console.log(tasks[index].id);\n      const response = await axios.put(`http://localhost:3333/tasks/${tasks[index].id}/update`, {\n        descriptionTask\n      }, {\n        headers: {\n          Authorization: `${authToken}`\n        }\n      });\n      console.log('Lista editada com sucesso!', response.data);\n      const updatedTasks = [...tasks];\n      updatedTasks[index] = {\n        ...updatedTasks[index],\n        description: descriptionTask,\n        LastUpdate: response.data.LastUpdate\n      };\n      setTasks(updatedTasks);\n      setInputTaskOnOff(null);\n    } catch (error) {\n      console.error('Error for edit the list: ', error);\n    }\n  };\n  //\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"name-user\",\n      children: [\"Welcome, \", `${name}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-logout\",\n      onClick: () => {\n        setLogout(true);\n        logoutUser();\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      style: {\n        color: \"gainsboro\"\n      },\n      children: \"Create your To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: createList,\n      className: \"header-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input-create-list\",\n          type: \"text\",\n          value: titleList,\n          maxLength: Number(\"100\"),\n          required: true,\n          placeholder: \"Write the title of your To-Do List...\",\n          onChange: e => setTitleList(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"char-counter\",\n          children: `${titleList.length}/100`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button\",\n        style: {\n          marginLeft: '10px'\n        },\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => setShowLists(!showLists),\n      className: \"button\",\n      children: showLists ? 'Hide My Lists' : 'Show My Lists'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this), showLists && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-list\",\n      children: loadingList ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-lists-message\",\n        children: \"Loading lists...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }, this) : lists.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-lists-message\",\n        children: \"No list found... Add a new list!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: lists.map((list, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-list\",\n          onClick: () => openModalTask(list.id, list.title),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"icon-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-edit-list\",\n              onClick: e => {\n                e.stopPropagation();\n                openInputTitleList(index);\n              },\n              style: {\n                cursor: 'pointer',\n                color: 'green'\n              },\n              children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"icon-delete-list\",\n              onClick: e => {\n                e.stopPropagation();\n                deleteList(index);\n              },\n              style: {\n                cursor: 'pointer',\n                color: 'red'\n              },\n              children: /*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-title\",\n            children: [inputOnOff === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"input-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input-list\",\n                type: \"text\",\n                maxLength: Number(\"100\"),\n                required: true,\n                onClick: e => {\n                  e.stopPropagation();\n                },\n                value: newTitle,\n                onChange: anyChangeInput,\n                onKeyDown: e => {\n                  if (e.key === \"Enter\" && newTitle) {\n                    editTitleList(index);\n                  }\n                },\n                placeholder: \"Write your new title for the list...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"char-counter\",\n                children: `${newTitle.length}/100`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 45\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"list-title\",\n              children: list.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 45\n            }, this), inputOnOff === index && /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: e => {\n                e.stopPropagation();\n                if (newTitle.length > 0) {\n                  editTitleList(index);\n                }\n              },\n              className: \"icon-check-list\",\n              style: {\n                cursor: 'pointer',\n                color: 'green'\n              },\n              children: /*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 46\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 37\n          }, this), inputOnOff === index && warningError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-message\",\n            children: warningError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 421,\n            columnNumber: 79\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"date-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date\",\n                children: [\"Created: \", new Date(list.CreateAt).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"date\",\n                children: [\"Updated: \", new Date(list.LastUpdate).toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 37\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }, this), showModalTask && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        style: {\n          display: showModalTask ? 'block' : 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"modal-title\",\n            children: modalTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"close-icon-modal\",\n            onClick: closeModalTask,\n            style: {\n              cursor: 'pointer',\n              color: 'red'\n            },\n            children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-mid\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-list\",\n            children: loadingTask ? /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"modal-found-task\",\n              style: {\n                color: \"white\"\n              },\n              children: \"Loading tasks...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 46\n            }, this) : tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modal-found-task\",\n              style: {\n                color: \"white\"\n              },\n              children: \"No task found...Add a new task!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 55\n            }, this) : tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"modal-description\",\n                children: [inputTaskOnOff === index ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"input-container\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    className: \"input-task\",\n                    type: \"text\",\n                    required: true,\n                    value: descriptionTask,\n                    onChange: anyChangeInputTask,\n                    onKeyDown: e => {\n                      if (e.key === \"Enter\" && descriptionTask) {\n                        editTask(index);\n                      }\n                    },\n                    placeholder: \"Write to edit the title of task...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"title-task\",\n                  children: task.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 53\n                }, this), inputTaskOnOff === index && /*#__PURE__*/_jsxDEV(\"span\", {\n                  onClick: e => {\n                    e.stopPropagation();\n                    if (descriptionTask.length > 0) {\n                      editTask(index);\n                    }\n                  },\n                  className: \"icon-check-task\",\n                  style: {\n                    cursor: 'pointer',\n                    color: 'green'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 495,\n                    columnNumber: 54\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"icons-modal\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    onChange: anyChangeInputTask,\n                    onClick: () => {\n                      setDescriptionTask(task.description);\n                      openInputEditTask(index);\n                    },\n                    className: \"edit-icon-task\",\n                    style: {\n                      cursor: 'pointer',\n                      color: 'green'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FiEdit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 507,\n                      columnNumber: 54\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    onClick: () => deleteTask(task.id),\n                    className: \"delete-icon-task\",\n                    style: {\n                      cursor: 'pointer',\n                      color: 'red'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(FiTrash2, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 54\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 45\n              }, this), inputTaskOnOff === index && warningErrorTask && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error-message\",\n                children: warningErrorTask\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 95\n              }, this)]\n            }, task.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-footer\",\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: addTask\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input-title-task\",\n            type: \"text\",\n            required: true,\n            value: descriptionCreateTask,\n            onKeyDown: e => {\n              if (e.key === 'Enter') {\n                addTask(modalId);\n              }\n            },\n            onChange: e => {\n              setDescriptionCreateTask(e.target.value);\n            },\n            placeholder: \"Write your new title to the task...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-add-task\",\n            onClick: () => {\n              addTask(modalId);\n            },\n            children: \"Add Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 9\n  }, this);\n};\n_s(ToDoList, \"R0Dcs0/K0Uhsc03tsAQvS+ESdzk=\", false, function () {\n  return [useLocation];\n});\n_c = ToDoList;\nexport default ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","FiCheck","FiEdit","FiTrash2","FiX","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","ToDoList","_s","location","authToken","name","state","verifyToken","response","get","withCredentials","error","window","href","console","log","titleList","setTitleList","newTitle","setNewTitle","lists","setLists","logout","setLogout","showLists","setShowLists","inputOnOff","setInputOnOff","warningError","setWarningError","loadingList","setLoadingList","foundLists","headers","Authorization","data","Lista","logoutUser","post","createList","event","preventDefault","err","openInputTitleList","index","title","anyChangeInput","e","target","value","trim","editTitleList","put","id","updatedLists","LastUpdate","deleteList","delete","filter","_","i","modalTitle","setModalTitle","tasks","setTasks","showModalTask","setShowModalTask","modalId","setModalId","descriptionTask","setDescriptionTask","descriptionCreateTask","setDescriptionCreateTask","inputTaskOnOff","setInputTaskOnOff","warningErrorTask","setWarningErrorTask","loadingTask","setLoadingTask","openModalTask","listId","listName","foundTasks","closeModalTask","addTask","Task","deleteTask","taskId","task","anyChangeInputTask","openInputEditTask","description","editTask","updatedTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","color","onSubmit","type","maxLength","Number","required","placeholder","onChange","length","marginLeft","map","list","stopPropagation","cursor","onKeyDown","key","Date","CreateAt","toLocaleString","display","_c","$RefreshReg$"],"sources":["C:/Users/lucas/Documents/MyRepositories/To-Do-List/frontend/src/components/api/todolist.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\r\nimport axios from 'axios'\r\nimport { FiCheck, FiEdit, FiTrash2, FiX} from 'react-icons/fi'\r\nimport '../../styles/api.css'\r\nimport { useLocation } from 'react-router-dom'\r\n\r\nconst ToDoList = () => {\r\n    const location = useLocation()\r\n    const { authToken, name} = location.state || {}\r\n\r\n      // Function to verify token and make refresh token\r\n  const verifyToken = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3333/auth/verify-token', { withCredentials: true })\r\n        \r\n      \r\n    } catch (error) {\r\n    window.location.href=\"/\"\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    verifyToken()\r\n  }, [])\r\n  //\r\n\r\n//LIST SCHEMA\r\n\r\n    //List States\r\n    type ListaType = {\r\n        id: string,\r\n        title: string,\r\n        CreateAt: Date,\r\n        LastUpdate: Date\r\n      };\r\n\r\n    const [titleList, setTitleList] = useState('')\r\n    const [newTitle, setNewTitle] = useState('')\r\n    const [lists, setLists] = useState<ListaType[]>([]);\r\n    const [logout, setLogout] = useState(false)\r\n    const [showLists, setShowLists] = useState(false)\r\n    const [inputOnOff, setInputOnOff] = useState<number | null>(null)\r\n    const [warningError, setWarningError] = useState<string | null>(null)\r\n    const [loadingList, setLoadingList] = useState(false)\r\n    //\r\n\r\n    // Function to find a specific list\r\n    const foundLists = useCallback(async () => {\r\n        setLoadingList(true)\r\n        try {\r\n            const response = await axios.get('http://localhost:3333/lists', {\r\n                headers: { Authorization: `${authToken}` },\r\n            })\r\n            setLists(response.data.Lista)\r\n        } catch (error) {\r\n            console.error('Error finding lists: ', error)\r\n        } finally{\r\n            setLoadingList(false)\r\n        }\r\n    }, [authToken])\r\n    //\r\n\r\n    // Effect to find the lists when showLists == true\r\n    useEffect(() => {\r\n        try {\r\n            if (showLists) {\r\n                foundLists()\r\n            }\r\n        } catch (error) {\r\n            console.error('Error for show the lists: ', error)\r\n        }\r\n    }, [showLists, foundLists])\r\n    //\r\n\r\n\r\n    // Function to logout user\r\n    const logoutUser = useCallback(async () => {\r\n        try {\r\n          const response = await axios.post('http://localhost:3333/logout',{},\r\n            {\r\n                withCredentials: true\r\n            }\r\n            )\r\n          if (response.data.logout) {\r\n            window.location.href=\"/\" \r\n          }\r\n        } catch (error) {\r\n          console.error('Error to make logout: ', error)\r\n        }\r\n    }, [])\r\n    //\r\n    \r\n    // Effect to logout user when logout == true\r\n    useEffect(() => {\r\n    try {\r\n        if (logout) {\r\n        logoutUser()\r\n        }\r\n    } catch (error) {\r\n        console.error('Error in process of logout: ', error)\r\n        }\r\n    }, [logout, logoutUser])\r\n      //\r\n\r\n\r\n    // Function to create a new list\r\n    const createList = async (event: React.FormEvent) => {\r\n        event.preventDefault()\r\n        try {\r\n            const response = await axios.post('http://localhost:3333/createlist',\r\n                { titleList },\r\n                { headers: { Authorization: `${authToken}` } }\r\n            )\r\n            setTitleList('')\r\n            setLists([...lists,response.data.Lista])\r\n        } catch (err) {\r\n            console.error('Error for create the list: ', err)\r\n        }\r\n    }\r\n    //\r\n\r\n    // Function to open input of title list edit\r\n    const openInputTitleList = (index: number) => {\r\n        setInputOnOff(index) \r\n        setNewTitle(lists[index].title)\r\n        setWarningError(null)\r\n    }\r\n    //\r\n\r\n    // Function to editTitleList pressing the key enter\r\n    const anyChangeInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setNewTitle(e.target.value)\r\n        if (e.target.value.trim()) {\r\n            setWarningError(null)\r\n        } else{\r\n            setWarningError('Empty field! Slave someting...') // Set warningError when empty have 0 charecter\r\n        }\r\n    }\r\n    //\r\n\r\n    // Function to edit title list\r\n    const editTitleList = async (index: number) => {\r\n        try {\r\n            const response = await axios.put(\r\n                `http://localhost:3333/lists/${lists[index].id}/update`,\r\n                { newTitle },\r\n                { headers: { Authorization: `${authToken}` } }\r\n            )\r\n            \r\n            const updatedLists = [...lists]\r\n            updatedLists[index] = {\r\n                ...updatedLists[index],\r\n                title: newTitle,\r\n                LastUpdate: response.data.LastUpdate,\r\n            }\r\n            setLists(updatedLists)\r\n            setInputOnOff(null) //Close input of edit title\r\n        } catch (error) {\r\n            console.error('Error for edit the title list: ', error)\r\n        }\r\n    }\r\n    //\r\n\r\n    // Function to delete list\r\n    const deleteList = async (index: number) => {\r\n        try {\r\n\r\n            await axios.delete(\r\n                `http://localhost:3333/lists/${lists[index].id}/delete`,\r\n                { headers: { Authorization: `${authToken}` } }\r\n            )\r\n            const updatedLists = lists.filter((_, i) => i !== index) //Filter for update the specific list\r\n            setInputOnOff(null)\r\n            setLists(updatedLists)\r\n        } catch (error) {\r\n            console.error('Error for delete the list: ', error)\r\n        }\r\n    }\r\n    //\r\n//\r\n\r\n//MODAL TASKS SCHEMA\r\n    //Modal Task States\r\n    type TasksType = {\r\n        id: string,\r\n        description: string,\r\n        CreateAt: Date,\r\n        LastUpdate: Date\r\n      };\r\n    const [modalTitle, setModalTitle] = useState('')\r\n    const [tasks, setTasks] = useState<TasksType[]>([])\r\n    const [showModalTask, setShowModalTask] = useState(false)\r\n    const [modalId, setModalId] = useState('')\r\n    const [descriptionTask, setDescriptionTask] = useState('')\r\n    const [descriptionCreateTask, setDescriptionCreateTask] = useState('')\r\n    const [inputTaskOnOff, setInputTaskOnOff] = useState<string | null | number>(null)\r\n    const [warningErrorTask, setWarningErrorTask] = useState<string | null>(null)\r\n    const [loadingTask, setLoadingTask] = useState(false)\r\n    //\r\n    \r\n    // Function to open modal task\r\n    const openModalTask = (listId: string,listName: string) => {\r\n        console.log(listId)\r\n        foundTasks(listId) // Find the tasks from list\r\n        setModalTitle(listName)\r\n        setModalId(listId)\r\n        setShowModalTask(true)\r\n    }\r\n\r\n    // Function to close modal task\r\n    const closeModalTask = () => {\r\n        setShowModalTask(false)\r\n        setTasks([]) // Hide tasks for close the modal\r\n    }\r\n\r\n    //  Function to find tasks\r\n    const foundTasks = async (listId: string) => {\r\n        setLoadingTask(true)\r\n        try {\r\n            const response = await axios.get(`http://localhost:3333/lists/${listId}/tasks`, \r\n                { headers: { Authorization: `${authToken}` } }\r\n            )\r\n\r\n            setTasks(response.data.tasks)\r\n            setLoadingTask(false) \r\n        } catch (error) {\r\n            console.error('Error for found the tasks: ', error)\r\n        }\r\n    }\r\n    \r\n\r\n//\r\n\r\n    // Function to add task in the list\r\n    const addTask = async(listId: string | React.FormEvent) => {\r\n        try {\r\n            const response = await axios.post(`http://localhost:3333/lists/${listId}/addtask`,\r\n                { descriptionCreateTask },\r\n                { headers: { Authorization: `${authToken}` }}\r\n            )\r\n            setDescriptionCreateTask('')\r\n            setTasks([...tasks, response.data.Task])\r\n        } catch (error) {\r\n            console.error('Error for add the task: ', error)\r\n        }\r\n    }\r\n\r\n    // Function to delete a task\r\n    const deleteTask = async (taskId: string) => {\r\n        try {\r\n            await axios.delete(`http://localhost:3333/tasks/${taskId}/delete`, {\r\n                headers: { Authorization: `${authToken}` },\r\n            })\r\n            setTasks(tasks.filter((task) => task.id !== taskId)) // Remove a tarefa da lista localmente\r\n        } catch (error) {\r\n            console.error('Error for delete the task: ', error)\r\n        }\r\n    }\r\n\r\n    // Function for editTitleList pressing the key enter\r\n    const anyChangeInputTask = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setDescriptionTask(e.target.value)\r\n        if (e.target.value.trim()) {\r\n            setWarningErrorTask(null)\r\n        } else{\r\n            setWarningErrorTask('Empty field! Slave someting...') // Set warningError when empty have 0 charecter\r\n        }\r\n    }\r\n    //\r\n\r\n    // Function for open input of title list edit\r\n    const openInputEditTask = (index: number) => {\r\n        setInputTaskOnOff(index)\r\n        setDescriptionTask(tasks[index].description) \r\n        setWarningErrorTask(null) \r\n    \r\n    }\r\n    //\r\n\r\n    // Function to edit a task\r\n    const editTask = async (index: number) => {\r\n        try {\r\n            console.log(tasks[index].id)\r\n            const response = await axios.put(\r\n                `http://localhost:3333/tasks/${tasks[index].id}/update`,\r\n                { descriptionTask },\r\n                { headers: { Authorization: `${authToken}` } }\r\n            )\r\n            console.log('Lista editada com sucesso!', response.data)\r\n            const updatedTasks = [...tasks]\r\n            updatedTasks[index] = {\r\n                ...updatedTasks[index],\r\n                description: descriptionTask,\r\n                LastUpdate: response.data.LastUpdate,\r\n            }\r\n            setTasks(updatedTasks)\r\n            setInputTaskOnOff(null)\r\n        } catch (error) {\r\n            console.error('Error for edit the list: ', error)\r\n        }\r\n    }\r\n//\r\n\r\n    return (\r\n        <div className=\"container-page\">\r\n            <p className=\"name-user\">Welcome, {`${name}`}</p>\r\n                <button className=\"btn-logout\" onClick={() => {\r\n                setLogout(true)\r\n                logoutUser()\r\n                }}\r\n                >Logout</button>\r\n\r\n  \r\n            <h1 className=\"title\" style={{color: \"gainsboro\"}}>Create your To-Do List</h1>\r\n            <form onSubmit={createList} className=\"header-form\">\r\n            <div className=\"input-container\">\r\n                \r\n                <input\r\n                    className=\"input-create-list\"\r\n                    type=\"text\"\r\n                    value={titleList}\r\n                    maxLength={Number(\"100\")}\r\n                    required\r\n                    placeholder=\"Write the title of your To-Do List...\"\r\n                    onChange={(e) => setTitleList(e.target.value)}\r\n                />\r\n                <span className=\"char-counter\">{`${titleList.length}/100`}</span>\r\n                </div>\r\n                <button \r\n                    type=\"submit\" \r\n                    className=\"button\"\r\n                    style={{ marginLeft: '10px'}}\r\n                >Create</button>\r\n\r\n            </form>\r\n\r\n            <button\r\n                type=\"button\"\r\n                onClick={() => setShowLists(!showLists)}\r\n                className=\"button\"\r\n            >\r\n                {showLists ? 'Hide My Lists' : 'Show My Lists'}\r\n            </button>\r\n\r\n            {showLists && (\r\n                <div className=\"container-list\">\r\n                    {loadingList ? (\r\n                        <p className=\"no-lists-message\">Loading lists...</p>\r\n                    ) : lists.length === 0 ? (\r\n                        <p className=\"no-lists-message\">No list found... Add a new list!</p>\r\n                    ) : (\r\n                        <div className=\"list\">\r\n                            {lists.map((list, index: number) => (\r\n                                <div className=\"card-list\" key={index} onClick={() => openModalTask(list.id, list.title)}>\r\n                                    <div className=\"icon-list\">\r\n                                        <span\r\n                                            className=\"icon-edit-list\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation()\r\n                                                openInputTitleList(index)\r\n                                            }}\r\n                                            style={{ cursor: 'pointer', color: 'green' }}\r\n                                        >\r\n                                            <FiEdit />\r\n                                        </span>\r\n\r\n                                        <span\r\n                                            className=\"icon-delete-list\"\r\n                                            onClick={(e) => {\r\n                                                e.stopPropagation()\r\n                                                deleteList(index)\r\n                                            }}\r\n                                            style={{ cursor: 'pointer', color: 'red' }}\r\n                                        >\r\n                                            <FiTrash2 />\r\n                                        </span>\r\n                                    </div>\r\n\r\n                                    <div className=\"card-title\">\r\n                                        {inputOnOff === index ? (\r\n                                            <div className=\"input-container\">\r\n                                                <input\r\n                                                    className=\"input-list\"\r\n                                                    type=\"text\"\r\n                                                    maxLength={Number(\"100\")}\r\n                                                    required\r\n                                                    onClick={(e) =>{\r\n                                                        e.stopPropagation()\r\n                                                    }}\r\n                                                    value={newTitle}\r\n                                                    onChange={anyChangeInput}\r\n                                                    onKeyDown={(e) => {\r\n                                                        if (e.key === \"Enter\" && newTitle) {\r\n                                                            editTitleList(index)\r\n                                                        }\r\n                                                    }}\r\n                                                    \r\n                                                    placeholder=\"Write your new title for the list...\"\r\n                                                />\r\n                                                <span className=\"char-counter\">{`${newTitle.length}/100`}</span>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <p className=\"list-title\">{list.title}</p>\r\n                                        )}\r\n\r\n                                        {inputOnOff === index && (\r\n                                            <span   \r\n                                                onClick={(e) => {\r\n                                                    e.stopPropagation()\r\n                                                    if (newTitle.length > 0) {\r\n                                                        editTitleList(index)\r\n                                                    }\r\n                                                }}\r\n                                                className=\"icon-check-list\"\r\n                                                style={{ cursor: 'pointer', color: 'green' }}\r\n                                            ><FiCheck /></span>\r\n                                        )}\r\n                                    </div>\r\n                                    \r\n                                    {inputOnOff === index && warningError && (<div className=\"error-message\">{warningError}</div>)}\r\n\r\n                                    <div className=\"card-footer\">\r\n                                        <div className=\"date-container\">\r\n                                            <span className=\"date\">\r\n                                                Created: {new Date(list.CreateAt).toLocaleString()}\r\n                                            </span>\r\n                                            <br />\r\n                                            <span className=\"date\">\r\n                                                Updated: {new Date(list.LastUpdate).toLocaleString()}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n            {showModalTask && (\r\n                <>\r\n                   <div\r\n                    className=\"modal-overlay\"\r\n                    style={{ display: showModalTask ? 'block' : 'none' }}\r\n                    ></div>\r\n\r\n                    <div className=\"modal-container\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 className=\"modal-title\">{modalTitle}</h2>\r\n                            <span \r\n                                className=\"close-icon-modal\"\r\n                                onClick={closeModalTask}\r\n                                style={{ cursor: 'pointer', color: 'red'}}\r\n                            ><FiX /></span>\r\n                        </div>\r\n                        <div className=\"modal-mid\">\r\n                            <div className=\"modal-list\">\r\n                            {loadingTask ? ( <p className=\"modal-found-task\" style = {{color: \"white\"}}>Loading tasks...</p>\r\n                            ) : tasks.length === 0 ? (<div className=\"modal-found-task\" style = {{color: \"white\"}}>No task found...Add a new task!</div>\r\n                            ) : (tasks.map((task, index) => (\r\n                                        <div key={task.id}>\r\n                                            <div className=\"modal-description\">                                    \r\n                                                {inputTaskOnOff === index ? (\r\n                                                    <div className=\"input-container\">\r\n                                                        <input\r\n                                                            className=\"input-task\"\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            value={descriptionTask}\r\n                                                            onChange={anyChangeInputTask}\r\n                                                            onKeyDown={(e) => {\r\n                                                                if (e.key === \"Enter\" && descriptionTask) {\r\n                                                                    editTask(index)\r\n                                                                }\r\n                                                            }}\r\n                                                            \r\n                                                            placeholder=\"Write to edit the title of task...\"\r\n                                                        />\r\n                                                        \r\n                                                    </div>\r\n                                                ) : (\r\n                                                    <p className=\"title-task\">{task.description}</p>\r\n                                                )}\r\n\r\n                                                {inputTaskOnOff === index && (\r\n                                                    <span\r\n                                                        onClick={(e) => {\r\n                                                            e.stopPropagation()\r\n                                                            if (descriptionTask.length > 0) {\r\n                                                            editTask(index)\r\n                                                            }\r\n                                                        }}\r\n                                                        className=\"icon-check-task\"\r\n                                                        style={{ cursor: 'pointer', color: 'green' }}\r\n                                                    ><FiCheck /></span>\r\n                                                )}\r\n                                \r\n                                                <div className=\"icons-modal\">\r\n                                                    <div\r\n                                                        onChange={anyChangeInputTask}\r\n                                                        onClick={() => {\r\n                                                            setDescriptionTask(task.description)\r\n                                                            openInputEditTask(index)}\r\n                                                        }\r\n                                                        className=\"edit-icon-task\"\r\n                                                        style={{cursor: 'pointer',color: 'green'}}\r\n                                                    ><FiEdit /></div>\r\n                                                    <div\r\n                                                        onClick={() => deleteTask(task.id)}\r\n                                                        className=\"delete-icon-task\"\r\n                                                        style={{ cursor: 'pointer', color: 'red'}}\r\n                                                    ><FiTrash2 /></div>\r\n                                                </div>\r\n                                            </div>\r\n                                            {inputTaskOnOff === index && warningErrorTask && (<div className=\"error-message\">{warningErrorTask}</div>)}\r\n                                        </div>\r\n                                    ))\r\n                                )}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <form onSubmit={addTask}></form>\r\n                            <input\r\n                                className=\"input-title-task\"\r\n                                type=\"text\"\r\n                                required\r\n                                value= {descriptionCreateTask}\r\n                                onKeyDown={(e) =>{\r\n                                    if(e.key === 'Enter'){\r\n                                        addTask(modalId)\r\n                                    }\r\n                                }}\r\n                                onChange={(e) => {\r\n                                    setDescriptionCreateTask(e.target.value)\r\n                                }}\r\n                                placeholder=\"Write your new title to the task...\"\r\n                             />\r\n                            <button \r\n                                className=\"button-add-task\" \r\n                                onClick={()=> {addTask(modalId)}}>Add Task\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoList\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}